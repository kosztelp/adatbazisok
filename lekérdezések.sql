--GolKiraly:
SELECT TOP 1 PLAYER_NAME
from PLAYERS JOIN PLAYERS_STAT ON PLAYERS.PLAYER_ID = PLAYERS_STAT.PLAYER_ID
ORDER BY GOALS DESC

--Játékosok ranksorolása teljesítmény szerint csapatonként csoportosítva
SELECT 
    P.PLAYER_NAME,
    P.TEAM_ID,
    PS.GOALS + PS.ASSISTS AS TOTAL_PERFORMANCE,
    RANK() OVER (PARTITION BY P.TEAM_ID ORDER BY (PS.GOALS + PS.ASSISTS) DESC) AS PERFORMANCE_RANK
FROM 
    PLAYERS P
JOIN 
    PLAYERS_STAT PS ON P.PLAYER_ID = PS.PLAYER_ID;  

--Csapatok teljesitmenye, legutobbi merkozeseik alapjan
SELECT 
    T.TEAM_NAME,
    M.HOME_GOALS,
    M.GUEST_GOALS,
    CASE 
        WHEN M.HOME_GOALS > M.GUEST_GOALS THEN T.TEAM_NAME
        WHEN M.HOME_GOALS < M.GUEST_GOALS THEN T2.TEAM_NAME
        ELSE 'DRAW'
    END AS MATCH_RESULT
FROM 
    (SELECT *, ROW_NUMBER() OVER (PARTITION BY TEAM1 ORDER BY MATCH_ID DESC) AS RN 
     FROM MATCHES) M
JOIN 
    TEAMS T ON M.TEAM1 = T.TEAM_ID
JOIN 
    TEAMS T2 ON M.TEAM2 = T2.TEAM_ID
WHERE 
    M.RN = 1;

--Fradi leggyengebb ellenfele
SELECT *
FROM TEAMS
WHERE TEAM1 = 4 AND HOME_GOALS > GUEST_GOALS

UNION 

SELECT *
FROM TEAMS
WHERE TEAM2 = 4 AND GUEST_GOALS > HOME_GOALS

--Meccsek gyoztesei

SELECT *,
        CASE
            WHEN HOME_GOALS > GUEST_GOALS THEN 'Hazai Győzelem'
            WHEN GUEST_GOALS > HOME_GOALS THEN 'Vendég Győzelem'
            ELSE 'Döntetlen'
        END 
FROM MATCHES

--Többszintű összegzés

SELECT 
    TEAM_NAME,
    PLAYER_POS,
    COUNT(*) AS PLAYER_COUNT,
    AVG(AGE) AS AVG_AGE,
    SUM(PRICE) AS TOTAL_PRICE
FROM PLAYERS P
JOIN TEAMS T ON P.TEAM_ID = T.TEAM_ID
GROUP BY ROLLUP (TEAM_NAME, PLAYER_POS)
ORDER BY TEAM_NAME, PLAYER_POS;